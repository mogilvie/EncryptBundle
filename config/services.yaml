
services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event listeners, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # Listener Interface, default is DoctrineEncryptListener but it can be overriden in the app config
#    SpecShaper\EncryptBundle\EventListener\DoctrineEncryptListenerInterface:
#        class: '%spec_shaper_encrypt.listener_class%'
#        arguments:
#            $annotationArray: '%spec_shaper_encrypt.annotation_classes%'
#            $isDisabled: '%spec_shaper_encrypt.is_disabled%'
#        tags:
#            - { name: doctrine.event_listener, connection: default }

    # Listeners to catch any encrypt or decrypt events thrown
#    SpecShaper\EncryptBundle\EventListener\EncryptEventListener:
#        arguments:
#            $isDisabled: '%spec_shaper_encrypt.is_disabled%'
#        tags:
#            - { name: kernel.event_listener, connection: default }

    # Factory to create the encryptor/decryptor
    SpecShaper\EncryptBundle\Encryptors\EncryptorFactory:
        arguments: ['@event_dispatcher']
        tags:
            - { name: monolog.logger, channel: app }

    # The encryptor service created by the factory according to the passed method and using the encrypt_key
    SpecShaper\EncryptBundle\Encryptors\EncryptorInterface:
        factory: ['@SpecShaper\EncryptBundle\Encryptors\EncryptorFactory','createService']
        arguments:
            $encryptKey: '%spec_shaper_encrypt.encrypt_key%'
            $encryptorClass: '%spec_shaper_encrypt.encryptor_class%'

    # CLI command to encrypt or decrypt all fields in a database
    SpecShaper\EncryptBundle\Command\EncryptDatabaseCommand:
        arguments:
            $annotationArray: '%spec_shaper_encrypt.annotation_classes%'

    # CLI command to generate a 256 bit encryption key
    SpecShaper\EncryptBundle\Command\GenKeyCommand:
        tags:
            -  { name: console.command }
